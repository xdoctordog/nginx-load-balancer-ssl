
# Add this line to hosts file:
# 127.0.0.1 magento_alb_ssl.loc

    server {
        listen 80;
        ssl_certificate /etc/nginx/certs/cert.crt;
        ssl_certificate_key /etc/nginx/certs/key.key;

        server_name server.one.fake.ssl;
        root /var/www/html/server.one.fake.ssl/;
        charset utf-8;

        index index.html;
        location / {
            try_files $uri $uri/ =404;
        }
    }

    server {
        listen 81;

        server_name server.two.fake.ssl;
        root /var/www/html/server.two.fake.ssl/;
        charset utf-8;

        index index.html;
        location / {
            try_files $uri $uri/ =404;
        }
    }

    upstream all_fake_ssl {
        server 127.0.0.1:80;
        server 127.0.0.1:81;

        #route is the part of commercial NGINX
        #server server.two.fake.ssl:80 route=server.two.fake.ssl;
    }

    server {
        listen 443 ssl;
        ssl_certificate /etc/nginx/certs/cert.crt;
        ssl_certificate_key /etc/nginx/certs/key.key;

        server_name magento_alb_ssl.loc;
        absolute_redirect off;

        location / {
            proxy_pass http://all_fake_ssl/;

            # https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-load-balancing-with-ssl-termination
            #proxy_set_header Host $host;
            #proxy_set_header Host server.two.fake.ssl;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            #proxy_pass_request_headers on;
            #proxy_ssl_server_name on;

            proxy_redirect off;
            proxy_intercept_errors on;
            proxy_cache off;
        }
    }
